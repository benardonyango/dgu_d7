<?php
/**
 * @file
 * Code for the DGU Data set feature.
 */

include_once 'dgu_data_set.features.inc';

function dgu_data_set_url_outbound_alter(&$path, &$options, $original_path) {
  if(substr($path, 0, 12) == 'ckan_dataset') {
    $dataset = entity_load_single('ckan_dataset', substr($path, 13));
    $path = 'dataset/' . $dataset->name;
  }
}
function dgu_data_set_menu(){
  $items['dataset/%/comments'] = array(
    'title' => 'Dataset comments report',
    'page callback' => 'dgu_data_set_comments',
    'page arguments' => array(1),
    'access arguments' => array('access content'),
  );
  return $items;
}

function dgu_data_set_theme($existing, $type, $theme, $path) {
  return array(
    'dataset_comments_report' => array(
      'path' => drupal_get_path('module', 'dgu_data_set') . '/templates',
      'template' => 'dataset_comments_report',
      'variables' => array(
        'dataset_comments' => NULL,
      ),
    ),
  );
}

function dgu_data_set_comments($ckan_publisher_id){
  $publisher_sql = "SELECT
    title, ckan_id
    FROM ckan_publisher p
    WHERE  p.id = :pid OR p.ckan_id = :pid
    LIMIT 1";
  $publisher_result = db_query($publisher_sql, array(':pid' => $ckan_publisher_id));

  $sql = "SELECT
    p.title AS publisher_name,
    FROM_UNIXTIME(MAX(r.created), '%d/%m/%Y') as post_date,
    MAX(r.created) as created,
    d.title as dataset_title,
    field_reply_comment_value as comment,
    field_reply_subject_value as subject,
    d.ckan_id as ckan_id
    FROM reply r
    LEFT JOIN field_data_field_reply_comment c ON c.entity_id = r.id
    LEFT JOIN field_data_field_reply_subject s on s.entity_id = r.id
    LEFT JOIN ckan_dataset d ON d.id = r.entity_id
    LEFT JOIN ckan_publisher p ON  p.id = d.publisher_id
    WHERE r.entity_type = 'ckan_dataset'
    AND p.id = :pid OR p.ckan_id = :pid
    GROUP BY r.entity_id
    ORDER BY created DESC";
  $dataset_result = db_query($sql, array(':pid' => $ckan_publisher_id));
   return theme('dataset_comments_report',  array('dataset_comments' => $dataset_result, 'publisher' => $publisher_result->fetchObject()));

}
